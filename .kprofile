#!/bin/bash


      kflist(){ grep '(){'  ~/.kprofile/.kprofile | sed -e 's/(){/^/g' | cut -d'^' -f1 | sed -e 's/ //g' | sort -u ; }
      
#/*******************************************************/
#/***** kubernetes environ settings and functions *******/
#/*******************************************************/

      kstat(){ watch kubectl get pods,svc,nodes,rc,rs,pv,pvc --all-namespaces ; }
   kbashcmd(){ NameSpace=${1} ; BashCommand="${2}" ; kubectl exec -it --namespace=${NameSpace} $(kubectl get pods -n ${NameSpace} | grep ${NameSpace} | awk '{print $1}') -- bash -c "${BashCommand}" ; }
    kdelpod(){ kubectl delete pod ${2} -n ${1} --grace-period 0 --force ; }
      kbash(){ K8S_SERVICE_NAME=$( kubectl get pods -n ${1} | grep ${2} | head -1 | awk '{print $1}') ; kubectl exec -it --stdin --tty ${K8S_SERVICE_NAME} -n ${1} -- /bin/bash ;}
    kdelpod(){ kubectl delete pod ${2} -n ${1} --grace-period 0 --force ; }

kbashNodeRoot(){
    # //Source: https://alexei-led.github.io/post/k8s_node_shell/
    node=${1}
    nodeName=$(kubectl get node ${node} -o template --template='{{index .metadata.labels "kubernetes.io/hostname"}}') 
    nodeSelector='"nodeSelector": { "kubernetes.io/hostname": "'${nodeName:?}'" },'
    podName=${USER}-nsenter-${node}

    kubectl run ${podName:?} --restart=Never -it --rm --image overriden --overrides '
    {
      "spec": {
        "hostPID": true,
        "hostNetwork": true,
        '"${nodeSelector?}"'
        "tolerations": [{
            "operator": "Exists"
        }],
        "containers": [
          {
            "name": "nsenter",
            "image": "alexeiled/nsenter:2.34",
            "command": [
              "/nsenter", "--all", "--target=1", "--", "su", "-"
            ],
            "stdin": true,
            "tty": true,
            "securityContext": {
              "privileged": true
            }
          }
        ]
      }
    }' --attach "$@"
}
